version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-script.sql:/docker-entrypoint-initdb.d/10-init-script.sql
      - ./postgres/admin-tasks.sql:/docker-entrypoint-initdb.d/20-admin-tasks.sql
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PASSWORD:-5432}/postgres
      DB_HOST: ${DB_HOST:-localhost}
      DB_PORT: ${POSTGRES_PORT:-5432}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    # ports:
    #   - '80:80'
    environment:
      RECAPTCHA_SITE_KEY: ${RECAPTCHA_SITE_KEY}
      API_URL: ${API_URL}
    depends_on:
      - backend
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80']
      interval: 30s
      timeout: 10s
      retries: 3

  cron:
    build: ./cron
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./cron/logs:/var/log
    healthcheck:
      test: ['CMD-SHELL', "pgrep cron || (echo 'Cron not running' && exit 1)"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
